install.packages("knitr")
install.packages("MASS")
install.packages("ggplot2")
install.packages("xtable")
library("knitr", lib.loc="/home/manatee/R/x86_64-pc-linux-gnu-library/3.0")
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd
nwd = paste(nwd, "pairparser/results", sep = "/")
setwd("~/Programming/sentiment_dict_mining_2014/Sergej-and-Egor/plots/resanalysis")
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "pairparser/results", sep = "/")
nwd
fname = "en_pairs(7).txt"
df = read.table(paste(nwd, fname, sep = "/"), skip = 1, stringsAsFactors=FALSE, encoding="UTF-8")
colnames(df) <- c("pos", "neg", "a1", "a2")
dict = unique(append(unique(df[['a1']]), unique(df[['a2']])))
dict_len = length(dict)
nwd = paste(nwd, "results", sep = "/")
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "results", sep = "/")
nwd
fname = paste(c("pos", ftag, ".txt"), collapse='')
ftag = '7_3'
fname = paste(c("pos", ftag, ".txt"), collapse='')
fname
pos_dict = scan(paste(nwd, fname, sep = "/"), what=character())
fname = paste(c("neg", ftag, ".txt"), collapse='')
neg_dict = scan(paste(nwd, fname, sep = "/"), what=character())
neg_coef = 3
ndf = df
ndf$neg = ndf$neg * neg_coef
paste(c("sums", ftag, ".txt"), collapse='')
sums = read.table(fname = paste(c("sums", ftag, ".txt"), collapse=''), stringsAsFactors=FALSE, col.names = c('word', 's'))
sums = read.table(paste(c("sums", ftag, ".txt"), collapse=''), stringsAsFactors=FALSE, col.names = c('word', 's'))
comp_dict = read.table('../../../testing/500_neg.txt', stringsAsFactors=FALSE, encoding="UTF-8")
comp_dict
comp_dict = read.table('../../../testing/500_neg.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1']
comp_dict
comp_dict = read.table('../../../testing/500_neg.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1']
comp_dict = c(comp_dict, read.table('../../../testing/500_pos.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1'])
comp_dict
э
'спокойный' %in% comp_dict
which(sums$w %in% comp_dict)
which(nsums$w %in% neg_dict)
sums
fsums = sums
fsums$s = factor(fsums$s)
lvls = levels(fsums$s)
counts = matrix(rep(0, 3 * length(lvls)), ncol = 3)
counts[, 1] = as.numeric(lvls)
lvls
sums = read.table(paste(c("sums", ftag, "d.txt"), collapse=''), stringsAsFactors=FALSE, col.names = c('word', 's'))
fsums = sums
fsums$s = factor(fsums$s)
lvls = levels(fsums$s)
counts = matrix(rep(0, 3 * length(lvls)), ncol = 3)
counts[, 1] = as.numeric(lvls)
lvls
View(counts)
fsums$s = factor(fsums$s)
lvls = levels(fsums$s)
counts = matrix(rep(0, 3 * length(lvls)), ncol = 3)
counts[, 1] = as.numeric(lvls)
cwords = list(list(), length = length(lvls))
for (i in 1:length(lvls)) {
buf = fsums[fsums$s == lvls[i], ]
cpos <- buf[buf$word %in% pos_dict, 'word']
cneg <- buf[buf$word %in% neg_dict, 'word']
cur = list(lvl1 = lvls[i], pos = cpos,neg = cneg)
cwords[[i]] = cur
counts[i, 2] = nrow(buf[buf$word %in% pos_dict, ]) # pos
counts[i, 3] = nrow(buf[buf$word %in% neg_dict, ]) # neg
}
View(counts)
\documentclass[11pt]{article}
\usepackage{graphicx, subfig}
\usepackage[a3paper, margin=0.45in]{geometry}
\usepackage[russian]{babel}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{listings}
\usepackage{caption}
\usepackage{longtable}
\usepackage{lscape}
\pagenumbering{gobble}
\setlength{\parindent}{0pt}
<<setup, echo = FALSE, results='hide', message = FALSE>>=
require(xtable)
options(width=90)
library("xtable")
@
\newcommand*\conj[1]{\bar{#1}}
\newcommand*\mean[1]{\bar{#1}}
\begin{document}
\begin{center}
{\bf \Large Resulting plots, f:7, coef:3\\}
\end{center}
<<echo=FALSE>>=
get_degree <- function(word, df) {
return(nrow(df[ df$a1 == word| df$a2 == word, ]))
}
get_sum_pos_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg > 0, ]))
}
get_sum_neg_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg < 0, ]))
}
get_pos_val <- function(word, df) {
return(sum(df[ df$a1 == word| df$a2 == word, "pos"]))
}
get_neg_val <- function(word, df) {
return(-sum(df[ df$a1 == word| df$a2 == word, "neg"]))
}
@
Считываем данные:
<<>>=
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "pairparser/results", sep = "/")
fname = "en_pairs(7).txt"
df = read.table(paste(nwd, fname, sep = "/"), skip = 1, stringsAsFactors=FALSE, encoding="UTF-8")
colnames(df) <- c("pos", "neg", "a1", "a2")
@
<<echo=FALSE>>=
#dictionaries
dict = unique(append(unique(df[['a1']]), unique(df[['a2']])))
dict_len = length(dict)
@
Всего слов (прилагательных): \Sexpr{dict_len} \\
<<echo=FALSE>>=
ftag = '7_3new'
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "results", sep = "/")
fname = paste(c("pos", ftag, ".txt"), collapse='')
pos_dict = scan(paste(nwd, fname, sep = "/"), what=character())
fname = paste(c("neg", ftag, ".txt"), collapse='')
neg_dict = scan(paste(nwd, fname, sep = "/"), what=character())
get_cut_val(pos_dict, neg_dict)
neg_coef = 3
ndf = df
ndf$neg = ndf$neg * neg_coef
comp_dict_neg = read.table('../../../testing/500_neg.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1']
comp_dict_pos = read.table('../../../testing/500_pos.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1']
@
Функция для подсчёта "веса" вершины:
<<>>=
get_sum <- function(word, df) {
topos = df[((df$a1 == word & df$a2 %in% pos_dict) |
(df$a2 == word & df$a1 %in% pos_dict)),
]
# print(topos)
sumpos = sum(topos$pos + topos$neg)
# print(sumpos)
toneg = df[((df$a1 == word & df$a2 %in% neg_dict) |
(df$a2 == word & df$a1 %in% neg_dict)),
]
# print(toneg)
sumneg = sum(toneg$pos + toneg$neg)
# print(sumneg)
return(sumpos - sumneg)
}
get_sum <- function(word, df) {
topos = df[((df$a1 == word & df$a2 %in% pos_dict) |
(df$a2 == word & df$a1 %in% pos_dict)),
]
# print(topos)
sumpos = sum(topos$pos + topos$neg)
# print(sumpos)
toneg = df[((df$a1 == word & df$a2 %in% neg_dict) |
(df$a2 == word & df$a1 %in% neg_dict)),
]
# print(toneg)
sumneg = sum(toneg$pos + toneg$neg)
# print(sumneg)
return(sumpos - sumneg)
}
sums = double(length=dict_len)
for (i in (1:dict_len)) {
if (i %% 50 == 0)
print(i)
sums[i] = get_sum(dict[i], ndf)
}
sums = matrix(c(dict, sums), ncol = 2)
write.table(sums[, c(1, 2)], file =paste(c("sums", ftag, ".txt"), collapse=''), sep = ' ',  col.names = FALSE, quote = FALSE, row.names = FALSE)
paste(c("sums", ftag, ".txt")
)
paste(c("sums", ftag, ".txt"), collapse='')
get_degree <- function(word, df) {
return(nrow(df[ df$a1 == word| df$a2 == word, ]))
}
get_sum_pos_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg > 0, ]))
}
get_sum_neg_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg < 0, ]))
}
get_pos_val <- function(word, df) {
return(sum(df[ df$a1 == word| df$a2 == word, "pos"]))
}
get_neg_val <- function(word, df) {
return(-sum(df[ df$a1 == word| df$a2 == word, "neg"]))
}
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "pairparser/results", sep = "/")
fname = "en_pairs(7).txt"
df = read.table(paste(nwd, fname, sep = "/"), skip = 1, stringsAsFactors=FALSE, encoding="UTF-8")
colnames(df) <- c("pos", "neg", "a1", "a2")
dict = unique(append(unique(df[['a1']]), unique(df[['a2']])))
dict_len = length(dict)
ftag = '7_3new'
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "results", sep = "/")
nwd
fname = paste(c("pos", ftag, ".txt"), collapse='')
pos_dict = scan(paste(nwd, fname, sep = "/"), what=character())
fname = paste(c("neg", ftag, ".txt"), collapse='')
neg_dict = scan(paste(nwd, fname, sep = "/"), what=character())
ftag
head(df)
head(ndf)
neg_coef = 3
ndf = df
ndf$neg = ndf$neg * neg_coef
head(ndf)
View(df)
View(ndf)
\documentclass[11pt]{article}
\usepackage{graphicx, subfig}
\usepackage[a3paper, margin=0.45in]{geometry}
\usepackage[russian]{babel}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{listings}
\usepackage{caption}
\usepackage{longtable}
\usepackage{lscape}
\pagenumbering{gobble}
\setlength{\parindent}{0pt}
<<setup, echo = FALSE, results='hide', message = FALSE>>=
require(xtable)
options(width=90)
library("xtable")
@
\newcommand*\conj[1]{\bar{#1}}
\newcommand*\mean[1]{\bar{#1}}
\begin{document}
\begin{center}
{\bf \Large Resulting plots, f:7, coef:3\\}
\end{center}
<<echo=FALSE>>=
get_degree <- function(word, df) {
return(nrow(df[ df$a1 == word| df$a2 == word, ]))
}
get_sum_pos_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg > 0, ]))
}
get_sum_neg_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg < 0, ]))
}
get_pos_val <- function(word, df) {
return(sum(df[ df$a1 == word| df$a2 == word, "pos"]))
}
get_neg_val <- function(word, df) {
return(-sum(df[ df$a1 == word| df$a2 == word, "neg"]))
}
@
Считываем данные:
<<>>=
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "pairparser/results", sep = "/")
fname = "en_pairs(7).txt"
df = read.table(paste(nwd, fname, sep = "/"), skip = 1, stringsAsFactors=FALSE, encoding="UTF-8")
colnames(df) <- c("pos", "neg", "a1", "a2")
@
<<echo=FALSE>>=
#dictionaries
dict = unique(append(unique(df[['a1']]), unique(df[['a2']])))
dict_len = length(dict)
@
Всего слов (прилагательных): \Sexpr{dict_len} \\
<<>>=
ftag = '7_3new'
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "results", sep = "/")
neg_coef = 3
ndf = df
ndf$neg = ndf$neg * neg_coef
comp_dict_neg = read.table('../../../testing/500_neg.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1']
comp_dict_pos = read.table('../../../testing/500_pos.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1']
get_sum <- function(word, df) {
topos = df[((df$a1 == word & df$a2 %in% pos_dict) |
(df$a2 == word & df$a1 %in% pos_dict)),
]
# print(topos)
sumpos = sum(topos$pos + topos$neg)
# print(sumpos)
toneg = df[((df$a1 == word & df$a2 %in% neg_dict) |
(df$a2 == word & df$a1 %in% neg_dict)),
]
# print(toneg)
sumneg = sum(toneg$pos + toneg$neg)
# print(sumneg)
return(sumpos - sumneg)
}
get_sum <- function(word, df) {
topos = df[((df$a1 == word & df$a2 %in% pos_dict) |
(df$a2 == word & df$a1 %in% pos_dict)),
]
print(topos)
sumpos = sum(topos$pos + topos$neg)
print(sumpos)
toneg = df[((df$a1 == word & df$a2 %in% neg_dict) |
(df$a2 == word & df$a1 %in% neg_dict)),
]
print(toneg)
sumneg = sum(toneg$pos + toneg$neg)
print(sumneg)
return(sumpos - sumneg)
}
get_sum('отвратительный', ndf)
get_degree <- function(word, df) {
return(nrow(df[ df$a1 == word| df$a2 == word, ]))
}
get_sum_pos_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg > 0, ]))
}
get_sum_neg_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg < 0, ]))
}
get_pos_val <- function(word, df) {
return(sum(df[ df$a1 == word| df$a2 == word, "pos"]))
}
get_neg_val <- function(word, df) {
return(-sum(df[ df$a1 == word| df$a2 == word, "neg"]))
}
get_sum <- function(word, df) {
topos = df[((df$a1 == word & df$a2 %in% pos_dict) |
(df$a2 == word & df$a1 %in% pos_dict)),
]
print(topos)
print(topos$pos + topos$neg)
sumpos = sum(topos$pos + topos$neg)
print(sumpos)
toneg = df[((df$a1 == word & df$a2 %in% neg_dict) |
(df$a2 == word & df$a1 %in% neg_dict)),
]
print(toneg)
sumneg = sum(toneg$pos + toneg$neg)
print(sumneg)
return(sumpos - sumneg)
}
get_sum('отвратительный', ndf)
setwd("~/Programming/sentiment_dict_mining_2014/Sergej-and-Egor/analysis/resanalysis")
\documentclass[11pt]{article}
\usepackage{graphicx, subfig}
\usepackage[a3paper, margin=0.45in]{geometry}
\usepackage[russian]{babel}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{listings}
\usepackage{caption}
\usepackage{longtable}
\usepackage{lscape}
\pagenumbering{gobble}
\setlength{\parindent}{0pt}
<<setup, echo = FALSE, results='hide', message = FALSE>>=
require(xtable)
options(width=90)
library("xtable")
@
\newcommand*\conj[1]{\bar{#1}}
\newcommand*\mean[1]{\bar{#1}}
\begin{document}
\begin{center}
{\bf \Large Resulting plots, f:7, coef:3\\}
\end{center}
<<echo=FALSE>>=
get_degree <- function(word, df) {
return(nrow(df[ df$a1 == word| df$a2 == word, ]))
}
get_sum_pos_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg > 0, ]))
}
get_sum_neg_deg <- function(word, df) {
return(nrow(df[ (df$a1 == word| df$a2 == word) & df$pos + df$neg < 0, ]))
}
get_pos_val <- function(word, df) {
return(sum(df[ df$a1 == word| df$a2 == word, "pos"]))
}
get_neg_val <- function(word, df) {
return(-sum(df[ df$a1 == word| df$a2 == word, "neg"]))
}
@
Считываем данные:
<<>>=
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "pairparser/results", sep = "/")
fname = "p_pairs7.txt"
df = read.table(paste(nwd, fname, sep = "/"), skip = 1, stringsAsFactors=FALSE, encoding="UTF-8")
colnames(df) <- c("pos", "neg", "a1", "a2")
@
<<echo=FALSE>>=
#dictionaries
dict = unique(append(unique(df[['a1']]), unique(df[['a2']])))
dict_len = length(dict)
@
Всего слов (прилагательных): \Sexpr{dict_len} \\
<<>>=
ftag = '7_3p'
spl = strsplit(getwd(), '/')
nwd = paste(spl[[1]][1:(length(spl[[1]]) - 2)], collapse = '/')
nwd = paste(nwd, "results", sep = "/")
fname = paste(c("pos", ftag, ".txt"), collapse='')
pos_dict = scan(paste(nwd, fname, sep = "/"), what=character())
fname = paste(c("neg", ftag, ".txt"), collapse='')
neg_dict = scan(paste(nwd, fname, sep = "/"), what=character())
neg_coef = 3
ndf = df
ndf$neg = ndf$neg * neg_coef
ss = df$pos + df$neg
maxss = max(ss)
minss = min(ss)
ratio = maxss / abs(minss)
nss = df$pos + neg_coef * df$neg
ssneg = sum(nss[which(nss < 0)])
@
Максимальный вес ребра = \Sexpr{maxss}\\
Минимальный вес ребра = \Sexpr{minss}\\
Отношение модуля максимального веса к минимальному = \Sexpr{ratio}\\
Сумма всех отрицательных рёбер = \Sexpr{ssneg}\\
Величина разреза: -34028.0\\
Число рёбер в разрезе: 10145\\
Число рёбер всего: 32759\\
Число отрицательный рёбер: 7171\\
Функция для подсчёта "веса" вершины:
<<>>=
comp_dict_neg = read.table('../../../testing/500_neg.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1']
comp_dict_pos = read.table('../../../testing/500_pos.txt', stringsAsFactors=FALSE, encoding="UTF-8")[, 'V1']
#sum_cut = 0
#edge_cut_count = 0
#neg_edge_count = nrow(ndf[ndf$pos + ndf$neg < 0, ])
#neg_edge_count = 0
#edge_count = nrow(ndf)++
#for (i in 1:edge_count) {
#
#  if (i %% 50 == 0) {
#    print(i)
#  }
#
#  cur = ndf[i, ]
#  w = cur$pos + cur$neg
#  if ((cur$a1 %in% pos_dict && cur$a2 %in% neg_dict) | (cur$a1 %in% neg_dict && cur$a2 %in% pos_dict)) {
#    sum_cut = sum_cut + w
#    edge_cut_count = edge_cut_count + 1
#  }
#  if (w < 0) {
#    neg_edge_count = neg_edge_count + 1
#  }
#}
@
<<>>=
get_sum <- function(word, df) {
topos = df[((df$a1 == word & df$a2 %in% pos_dict) |
(df$a2 == word & df$a1 %in% pos_dict)),
]
#print(topos)
#print(topos$pos + topos$neg)
sumpos = sum(topos$pos + topos$neg)
#print(sumpos)
toneg = df[((df$a1 == word & df$a2 %in% neg_dict) |
(df$a2 == word & df$a1 %in% neg_dict)),
]
#print(toneg)
sumneg = sum(toneg$pos + toneg$neg)
#print(sumneg)
return(sumpos - sumneg)
}
sums = read.table(paste(c("weights/sums", ftag, ".txt"), collapse=''), stringsAsFactors=FALSE, col.names = c('word', 's'))
sums[1]
sums[2]
hist(sums)
hist(sums[1])
hist(sums[2])
sums
hist(sums[[2]])
hist(sums[[2]], breaks = 100)
hist(sums[[2]], breaks = 1000)
hist(sums[[2]], breaks = 500)
hist(sums[[2]], breaks = 300)
hist(sums[[2]], breaks = 200)
hist(ndf$pos + ndf$neg)
hist(ndf$pos + ndf$neg, breaks = 100)
hist(df$pos + df$neg, breaks = 100)
neg_coef = 5.2
ndf = df
ndf$neg = ndf$neg * neg_coef
hist(df$pos + df$neg, breaks = 100)
hist(ndf$pos + ndf$neg, breaks = 100)
neg_coef = 4.5
ndf = df
ndf$neg = ndf$neg * neg_coef
hist(ndf$pos + ndf$neg, breaks = 100)
